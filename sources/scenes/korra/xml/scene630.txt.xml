<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet href="CoreNLP-to-HTML.xsl" type="text/xsl"?>
<root>
  <document>
    <docId>scene630.txt</docId>
    <sentences>
      <sentence id="1">
        <tokens>
          <token id="1">
            <word>Mako</word>
            <lemma>Mako</lemma>
            <CharacterOffsetBegin>0</CharacterOffsetBegin>
            <CharacterOffsetEnd>4</CharacterOffsetEnd>
            <POS>NNP</POS>
            <NER>PERSON</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="2">
            <word>says</word>
            <lemma>say</lemma>
            <CharacterOffsetBegin>5</CharacterOffsetBegin>
            <CharacterOffsetEnd>9</CharacterOffsetEnd>
            <POS>VBZ</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="3">
            <word>:</word>
            <lemma>:</lemma>
            <CharacterOffsetBegin>9</CharacterOffsetBegin>
            <CharacterOffsetEnd>10</CharacterOffsetEnd>
            <POS>:</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="4">
            <word>"</word>
            <lemma>"</lemma>
            <CharacterOffsetBegin>11</CharacterOffsetBegin>
            <CharacterOffsetEnd>12</CharacterOffsetEnd>
            <POS>``</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="5">
            <word>All</word>
            <lemma>all</lemma>
            <CharacterOffsetBegin>12</CharacterOffsetBegin>
            <CharacterOffsetEnd>15</CharacterOffsetEnd>
            <POS>RB</POS>
            <NER>O</NER>
            <Speaker>1</Speaker>
          </token>
          <token id="6">
            <word>right</word>
            <lemma>right</lemma>
            <CharacterOffsetBegin>16</CharacterOffsetBegin>
            <CharacterOffsetEnd>21</CharacterOffsetEnd>
            <POS>RB</POS>
            <NER>O</NER>
            <Speaker>1</Speaker>
          </token>
          <token id="7">
            <word>.</word>
            <lemma>.</lemma>
            <CharacterOffsetBegin>21</CharacterOffsetBegin>
            <CharacterOffsetEnd>22</CharacterOffsetEnd>
            <POS>.</POS>
            <NER>O</NER>
            <Speaker>1</Speaker>
          </token>
        </tokens>
        <parse>(ROOT
          (S
          (NP (NNP Mako))
          (VP (VBZ says))
          (: :)
          (FRAG
          (ADVP (`` ") (RB All)
          (ADVP (RB right))))
          (. .)))
          
          </parse>
        <dependencies type="basic-dependencies">
          <dep type="root">
            <governor idx="0">ROOT</governor>
            <dependent idx="2">says</dependent>
          </dep>
          <dep type="nsubj">
            <governor idx="2">says</governor>
            <dependent idx="1">Mako</dependent>
          </dep>
          <dep type="punct">
            <governor idx="2">says</governor>
            <dependent idx="3">:</dependent>
          </dep>
          <dep type="punct">
            <governor idx="6">right</governor>
            <dependent idx="4">"</dependent>
          </dep>
          <dep type="advmod">
            <governor idx="6">right</governor>
            <dependent idx="5">All</dependent>
          </dep>
          <dep type="dep">
            <governor idx="2">says</governor>
            <dependent idx="6">right</dependent>
          </dep>
          <dep type="punct">
            <governor idx="2">says</governor>
            <dependent idx="7">.</dependent>
          </dep>
        </dependencies>
        <dependencies type="collapsed-dependencies">
          <dep type="root">
            <governor idx="0">ROOT</governor>
            <dependent idx="2">says</dependent>
          </dep>
          <dep type="nsubj">
            <governor idx="2">says</governor>
            <dependent idx="1">Mako</dependent>
          </dep>
          <dep type="punct">
            <governor idx="2">says</governor>
            <dependent idx="3">:</dependent>
          </dep>
          <dep type="punct">
            <governor idx="6">right</governor>
            <dependent idx="4">"</dependent>
          </dep>
          <dep type="advmod">
            <governor idx="6">right</governor>
            <dependent idx="5">All</dependent>
          </dep>
          <dep type="dep">
            <governor idx="2">says</governor>
            <dependent idx="6">right</dependent>
          </dep>
          <dep type="punct">
            <governor idx="2">says</governor>
            <dependent idx="7">.</dependent>
          </dep>
        </dependencies>
        <dependencies type="collapsed-ccprocessed-dependencies">
          <dep type="root">
            <governor idx="0">ROOT</governor>
            <dependent idx="2">says</dependent>
          </dep>
          <dep type="nsubj">
            <governor idx="2">says</governor>
            <dependent idx="1">Mako</dependent>
          </dep>
          <dep type="punct">
            <governor idx="2">says</governor>
            <dependent idx="3">:</dependent>
          </dep>
          <dep type="punct">
            <governor idx="6">right</governor>
            <dependent idx="4">"</dependent>
          </dep>
          <dep type="advmod">
            <governor idx="6">right</governor>
            <dependent idx="5">All</dependent>
          </dep>
          <dep type="dep">
            <governor idx="2">says</governor>
            <dependent idx="6">right</dependent>
          </dep>
          <dep type="punct">
            <governor idx="2">says</governor>
            <dependent idx="7">.</dependent>
          </dep>
        </dependencies>
        <dependencies type="enhanced-dependencies">
          <dep type="root">
            <governor idx="0">ROOT</governor>
            <dependent idx="2">says</dependent>
          </dep>
          <dep type="nsubj">
            <governor idx="2">says</governor>
            <dependent idx="1">Mako</dependent>
          </dep>
          <dep type="punct">
            <governor idx="2">says</governor>
            <dependent idx="3">:</dependent>
          </dep>
          <dep type="punct">
            <governor idx="6">right</governor>
            <dependent idx="4">"</dependent>
          </dep>
          <dep type="advmod">
            <governor idx="6">right</governor>
            <dependent idx="5">All</dependent>
          </dep>
          <dep type="dep">
            <governor idx="2">says</governor>
            <dependent idx="6">right</dependent>
          </dep>
          <dep type="punct">
            <governor idx="2">says</governor>
            <dependent idx="7">.</dependent>
          </dep>
        </dependencies>
        <dependencies type="enhanced-plus-plus-dependencies">
          <dep type="root">
            <governor idx="0">ROOT</governor>
            <dependent idx="2">says</dependent>
          </dep>
          <dep type="nsubj">
            <governor idx="2">says</governor>
            <dependent idx="1">Mako</dependent>
          </dep>
          <dep type="punct">
            <governor idx="2">says</governor>
            <dependent idx="3">:</dependent>
          </dep>
          <dep type="punct">
            <governor idx="6">right</governor>
            <dependent idx="4">"</dependent>
          </dep>
          <dep type="advmod">
            <governor idx="6">right</governor>
            <dependent idx="5">All</dependent>
          </dep>
          <dep type="dep">
            <governor idx="2">says</governor>
            <dependent idx="6">right</dependent>
          </dep>
          <dep type="punct">
            <governor idx="2">says</governor>
            <dependent idx="7">.</dependent>
          </dep>
        </dependencies>
      </sentence>
      <sentence id="2">
        <tokens>
          <token id="1">
            <word>Let</word>
            <lemma>let</lemma>
            <CharacterOffsetBegin>23</CharacterOffsetBegin>
            <CharacterOffsetEnd>26</CharacterOffsetEnd>
            <POS>VB</POS>
            <NER>O</NER>
            <Speaker>1</Speaker>
          </token>
          <token id="2">
            <word>'s</word>
            <lemma>'s</lemma>
            <CharacterOffsetBegin>26</CharacterOffsetBegin>
            <CharacterOffsetEnd>28</CharacterOffsetEnd>
            <POS>PRP</POS>
            <NER>O</NER>
            <Speaker>1</Speaker>
          </token>
          <token id="3">
            <word>see</word>
            <lemma>see</lemma>
            <CharacterOffsetBegin>29</CharacterOffsetBegin>
            <CharacterOffsetEnd>32</CharacterOffsetEnd>
            <POS>VB</POS>
            <NER>O</NER>
            <Speaker>1</Speaker>
          </token>
          <token id="4">
            <word>if</word>
            <lemma>if</lemma>
            <CharacterOffsetBegin>33</CharacterOffsetBegin>
            <CharacterOffsetEnd>35</CharacterOffsetEnd>
            <POS>IN</POS>
            <NER>O</NER>
            <Speaker>1</Speaker>
          </token>
          <token id="5">
            <word>we</word>
            <lemma>we</lemma>
            <CharacterOffsetBegin>36</CharacterOffsetBegin>
            <CharacterOffsetEnd>38</CharacterOffsetEnd>
            <POS>PRP</POS>
            <NER>O</NER>
            <Speaker>1</Speaker>
          </token>
          <token id="6">
            <word>can</word>
            <lemma>can</lemma>
            <CharacterOffsetBegin>39</CharacterOffsetBegin>
            <CharacterOffsetEnd>42</CharacterOffsetEnd>
            <POS>MD</POS>
            <NER>O</NER>
            <Speaker>1</Speaker>
          </token>
          <token id="7">
            <word>catch</word>
            <lemma>catch</lemma>
            <CharacterOffsetBegin>43</CharacterOffsetBegin>
            <CharacterOffsetEnd>48</CharacterOffsetEnd>
            <POS>VB</POS>
            <NER>O</NER>
            <Speaker>1</Speaker>
          </token>
          <token id="8">
            <word>a</word>
            <lemma>a</lemma>
            <CharacterOffsetBegin>49</CharacterOffsetBegin>
            <CharacterOffsetEnd>50</CharacterOffsetEnd>
            <POS>DT</POS>
            <NER>O</NER>
            <Speaker>1</Speaker>
          </token>
          <token id="9">
            <word>train</word>
            <lemma>train</lemma>
            <CharacterOffsetBegin>51</CharacterOffsetBegin>
            <CharacterOffsetEnd>56</CharacterOffsetEnd>
            <POS>NN</POS>
            <NER>CRIMINAL_CHARGE</NER>
            <Speaker>1</Speaker>
          </token>
          <token id="10">
            <word>back</word>
            <lemma>back</lemma>
            <CharacterOffsetBegin>57</CharacterOffsetBegin>
            <CharacterOffsetEnd>61</CharacterOffsetEnd>
            <POS>RB</POS>
            <NER>O</NER>
            <Speaker>1</Speaker>
          </token>
          <token id="11">
            <word>to</word>
            <lemma>to</lemma>
            <CharacterOffsetBegin>62</CharacterOffsetBegin>
            <CharacterOffsetEnd>64</CharacterOffsetEnd>
            <POS>IN</POS>
            <NER>O</NER>
            <Speaker>1</Speaker>
          </token>
          <token id="12">
            <word>the</word>
            <lemma>the</lemma>
            <CharacterOffsetBegin>65</CharacterOffsetBegin>
            <CharacterOffsetEnd>68</CharacterOffsetEnd>
            <POS>DT</POS>
            <NER>O</NER>
            <Speaker>1</Speaker>
          </token>
          <token id="13">
            <word>Upper</word>
            <lemma>Upper</lemma>
            <CharacterOffsetBegin>69</CharacterOffsetBegin>
            <CharacterOffsetEnd>74</CharacterOffsetEnd>
            <POS>NNP</POS>
            <NER>LOCATION</NER>
            <Speaker>1</Speaker>
          </token>
          <token id="14">
            <word>Ring</word>
            <lemma>Ring</lemma>
            <CharacterOffsetBegin>75</CharacterOffsetBegin>
            <CharacterOffsetEnd>79</CharacterOffsetEnd>
            <POS>NNP</POS>
            <NER>LOCATION</NER>
            <Speaker>1</Speaker>
          </token>
          <token id="15">
            <word>.</word>
            <lemma>.</lemma>
            <CharacterOffsetBegin>79</CharacterOffsetBegin>
            <CharacterOffsetEnd>80</CharacterOffsetEnd>
            <POS>.</POS>
            <NER>O</NER>
            <Speaker>1</Speaker>
          </token>
        </tokens>
        <parse>(ROOT
          (S
          (VP (VB Let)
          (S
          (NP (PRP 's))
          (VP (VB see)
          (SBAR (IN if)
          (S
          (NP (PRP we))
          (VP (MD can)
          (VP (VB catch)
          (NP (DT a) (NN train))
          (ADVP (RB back)
          (PP (IN to)
          (NP (DT the) (NNP Upper) (NNP Ring)))))))))))
          (. .)))
          
          </parse>
        <dependencies type="basic-dependencies">
          <dep type="root">
            <governor idx="0">ROOT</governor>
            <dependent idx="1">Let</dependent>
          </dep>
          <dep type="nsubj">
            <governor idx="3">see</governor>
            <dependent idx="2">'s</dependent>
          </dep>
          <dep type="ccomp">
            <governor idx="1">Let</governor>
            <dependent idx="3">see</dependent>
          </dep>
          <dep type="mark">
            <governor idx="7">catch</governor>
            <dependent idx="4">if</dependent>
          </dep>
          <dep type="nsubj">
            <governor idx="7">catch</governor>
            <dependent idx="5">we</dependent>
          </dep>
          <dep type="aux">
            <governor idx="7">catch</governor>
            <dependent idx="6">can</dependent>
          </dep>
          <dep type="advcl">
            <governor idx="3">see</governor>
            <dependent idx="7">catch</dependent>
          </dep>
          <dep type="det">
            <governor idx="9">train</governor>
            <dependent idx="8">a</dependent>
          </dep>
          <dep type="obj">
            <governor idx="7">catch</governor>
            <dependent idx="9">train</dependent>
          </dep>
          <dep type="advmod">
            <governor idx="7">catch</governor>
            <dependent idx="10">back</dependent>
          </dep>
          <dep type="case">
            <governor idx="14">Ring</governor>
            <dependent idx="11">to</dependent>
          </dep>
          <dep type="det">
            <governor idx="14">Ring</governor>
            <dependent idx="12">the</dependent>
          </dep>
          <dep type="compound">
            <governor idx="14">Ring</governor>
            <dependent idx="13">Upper</dependent>
          </dep>
          <dep type="obl">
            <governor idx="10">back</governor>
            <dependent idx="14">Ring</dependent>
          </dep>
          <dep type="punct">
            <governor idx="1">Let</governor>
            <dependent idx="15">.</dependent>
          </dep>
        </dependencies>
        <dependencies type="collapsed-dependencies">
          <dep type="root">
            <governor idx="0">ROOT</governor>
            <dependent idx="1">Let</dependent>
          </dep>
          <dep type="nsubj">
            <governor idx="3">see</governor>
            <dependent idx="2">'s</dependent>
          </dep>
          <dep type="ccomp">
            <governor idx="1">Let</governor>
            <dependent idx="3">see</dependent>
          </dep>
          <dep type="mark">
            <governor idx="7">catch</governor>
            <dependent idx="4">if</dependent>
          </dep>
          <dep type="nsubj">
            <governor idx="7">catch</governor>
            <dependent idx="5">we</dependent>
          </dep>
          <dep type="aux">
            <governor idx="7">catch</governor>
            <dependent idx="6">can</dependent>
          </dep>
          <dep type="advcl">
            <governor idx="3">see</governor>
            <dependent idx="7">catch</dependent>
          </dep>
          <dep type="det">
            <governor idx="9">train</governor>
            <dependent idx="8">a</dependent>
          </dep>
          <dep type="obj">
            <governor idx="7">catch</governor>
            <dependent idx="9">train</dependent>
          </dep>
          <dep type="advmod">
            <governor idx="7">catch</governor>
            <dependent idx="10">back</dependent>
          </dep>
          <dep type="case">
            <governor idx="14">Ring</governor>
            <dependent idx="11">to</dependent>
          </dep>
          <dep type="det">
            <governor idx="14">Ring</governor>
            <dependent idx="12">the</dependent>
          </dep>
          <dep type="compound">
            <governor idx="14">Ring</governor>
            <dependent idx="13">Upper</dependent>
          </dep>
          <dep type="obl:to">
            <governor idx="10">back</governor>
            <dependent idx="14">Ring</dependent>
          </dep>
          <dep type="punct">
            <governor idx="1">Let</governor>
            <dependent idx="15">.</dependent>
          </dep>
        </dependencies>
        <dependencies type="collapsed-ccprocessed-dependencies">
          <dep type="root">
            <governor idx="0">ROOT</governor>
            <dependent idx="1">Let</dependent>
          </dep>
          <dep type="nsubj">
            <governor idx="3">see</governor>
            <dependent idx="2">'s</dependent>
          </dep>
          <dep type="ccomp">
            <governor idx="1">Let</governor>
            <dependent idx="3">see</dependent>
          </dep>
          <dep type="mark">
            <governor idx="7">catch</governor>
            <dependent idx="4">if</dependent>
          </dep>
          <dep type="nsubj">
            <governor idx="7">catch</governor>
            <dependent idx="5">we</dependent>
          </dep>
          <dep type="aux">
            <governor idx="7">catch</governor>
            <dependent idx="6">can</dependent>
          </dep>
          <dep type="advcl">
            <governor idx="3">see</governor>
            <dependent idx="7">catch</dependent>
          </dep>
          <dep type="det">
            <governor idx="9">train</governor>
            <dependent idx="8">a</dependent>
          </dep>
          <dep type="obj">
            <governor idx="7">catch</governor>
            <dependent idx="9">train</dependent>
          </dep>
          <dep type="advmod">
            <governor idx="7">catch</governor>
            <dependent idx="10">back</dependent>
          </dep>
          <dep type="case">
            <governor idx="14">Ring</governor>
            <dependent idx="11">to</dependent>
          </dep>
          <dep type="det">
            <governor idx="14">Ring</governor>
            <dependent idx="12">the</dependent>
          </dep>
          <dep type="compound">
            <governor idx="14">Ring</governor>
            <dependent idx="13">Upper</dependent>
          </dep>
          <dep type="obl:to">
            <governor idx="10">back</governor>
            <dependent idx="14">Ring</dependent>
          </dep>
          <dep type="punct">
            <governor idx="1">Let</governor>
            <dependent idx="15">.</dependent>
          </dep>
        </dependencies>
        <dependencies type="enhanced-dependencies">
          <dep type="root">
            <governor idx="0">ROOT</governor>
            <dependent idx="1">Let</dependent>
          </dep>
          <dep type="nsubj">
            <governor idx="3">see</governor>
            <dependent idx="2">'s</dependent>
          </dep>
          <dep type="ccomp">
            <governor idx="1">Let</governor>
            <dependent idx="3">see</dependent>
          </dep>
          <dep type="mark">
            <governor idx="7">catch</governor>
            <dependent idx="4">if</dependent>
          </dep>
          <dep type="nsubj">
            <governor idx="7">catch</governor>
            <dependent idx="5">we</dependent>
          </dep>
          <dep type="aux">
            <governor idx="7">catch</governor>
            <dependent idx="6">can</dependent>
          </dep>
          <dep type="advcl:if">
            <governor idx="3">see</governor>
            <dependent idx="7">catch</dependent>
          </dep>
          <dep type="det">
            <governor idx="9">train</governor>
            <dependent idx="8">a</dependent>
          </dep>
          <dep type="obj">
            <governor idx="7">catch</governor>
            <dependent idx="9">train</dependent>
          </dep>
          <dep type="advmod">
            <governor idx="7">catch</governor>
            <dependent idx="10">back</dependent>
          </dep>
          <dep type="case">
            <governor idx="14">Ring</governor>
            <dependent idx="11">to</dependent>
          </dep>
          <dep type="det">
            <governor idx="14">Ring</governor>
            <dependent idx="12">the</dependent>
          </dep>
          <dep type="compound">
            <governor idx="14">Ring</governor>
            <dependent idx="13">Upper</dependent>
          </dep>
          <dep type="obl:to">
            <governor idx="10">back</governor>
            <dependent idx="14">Ring</dependent>
          </dep>
          <dep type="punct">
            <governor idx="1">Let</governor>
            <dependent idx="15">.</dependent>
          </dep>
        </dependencies>
        <dependencies type="enhanced-plus-plus-dependencies">
          <dep type="root">
            <governor idx="0">ROOT</governor>
            <dependent idx="1">Let</dependent>
          </dep>
          <dep type="nsubj">
            <governor idx="3">see</governor>
            <dependent idx="2">'s</dependent>
          </dep>
          <dep type="ccomp">
            <governor idx="1">Let</governor>
            <dependent idx="3">see</dependent>
          </dep>
          <dep type="mark">
            <governor idx="7">catch</governor>
            <dependent idx="4">if</dependent>
          </dep>
          <dep type="nsubj">
            <governor idx="7">catch</governor>
            <dependent idx="5">we</dependent>
          </dep>
          <dep type="aux">
            <governor idx="7">catch</governor>
            <dependent idx="6">can</dependent>
          </dep>
          <dep type="advcl:if">
            <governor idx="3">see</governor>
            <dependent idx="7">catch</dependent>
          </dep>
          <dep type="det">
            <governor idx="9">train</governor>
            <dependent idx="8">a</dependent>
          </dep>
          <dep type="obj">
            <governor idx="7">catch</governor>
            <dependent idx="9">train</dependent>
          </dep>
          <dep type="advmod">
            <governor idx="7">catch</governor>
            <dependent idx="10">back</dependent>
          </dep>
          <dep type="case">
            <governor idx="14">Ring</governor>
            <dependent idx="11">to</dependent>
          </dep>
          <dep type="det">
            <governor idx="14">Ring</governor>
            <dependent idx="12">the</dependent>
          </dep>
          <dep type="compound">
            <governor idx="14">Ring</governor>
            <dependent idx="13">Upper</dependent>
          </dep>
          <dep type="obl:to">
            <governor idx="10">back</governor>
            <dependent idx="14">Ring</dependent>
          </dep>
          <dep type="punct">
            <governor idx="1">Let</governor>
            <dependent idx="15">.</dependent>
          </dep>
        </dependencies>
      </sentence>
      <sentence id="3">
        <tokens>
          <token id="1">
            <word>"</word>
            <lemma>"</lemma>
            <CharacterOffsetBegin>80</CharacterOffsetBegin>
            <CharacterOffsetEnd>81</CharacterOffsetEnd>
            <POS>``</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
        </tokens>
        <parse>(ROOT
          (INTJ (`` ")))
          
          </parse>
        <dependencies type="basic-dependencies">
          <dep type="root">
            <governor idx="0">ROOT</governor>
            <dependent idx="1">"</dependent>
          </dep>
        </dependencies>
        <dependencies type="collapsed-dependencies">
          <dep type="root">
            <governor idx="0">ROOT</governor>
            <dependent idx="1">"</dependent>
          </dep>
        </dependencies>
        <dependencies type="collapsed-ccprocessed-dependencies">
          <dep type="root">
            <governor idx="0">ROOT</governor>
            <dependent idx="1">"</dependent>
          </dep>
        </dependencies>
        <dependencies type="enhanced-dependencies">
          <dep type="root">
            <governor idx="0">ROOT</governor>
            <dependent idx="1">"</dependent>
          </dep>
        </dependencies>
        <dependencies type="enhanced-plus-plus-dependencies">
          <dep type="root">
            <governor idx="0">ROOT</governor>
            <dependent idx="1">"</dependent>
          </dep>
        </dependencies>
      </sentence>
    </sentences>
    <coreference>
      <coreference>
        <mention representative="true">
          <sentence>2</sentence>
          <start>2</start>
          <end>3</end>
          <head>2</head>
          <text>'s</text>
        </mention>
        <mention>
          <sentence>2</sentence>
          <start>5</start>
          <end>6</end>
          <head>5</head>
          <text>we</text>
        </mention>
      </coreference>
    </coreference>
  </document>
</root>
